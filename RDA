library("vegan") #Pacote com as principais funções me ecologia vegetal ~~ Package with the main functions me plant ecology
library("ggplot2") #Pacote para graficos ~~ Package for graphics
library("ggrepel") #Pacote que evite sobreposições no gráfico ~~ Package that avoids graph overlays
pacman::p_load(vegan, ggplot2, dplyr, ggrepel)
pacman::p_load(data.table)
library("dplyr")
pacman::p_load(data.table)

FR_especies = read.table("01072021RDAtodos.txt", header=TRUE)         #Dados de abundância de espécies ~~ species abundance data
                                                                      #Os dados estão organizados assim ~~ the data is organized like this:
                                                                      #          sp1   sp2  sp3
                                                                      #  G1_01    0    0.1   0 
                                                                      #  G1_02    0.5   0    1 
                                                                      #  G2_01    0     1    0


todasestruturas = read.table("27072021estruturais.txt", header=TRUE)  #Dados de estrutura da vegetação ~~ vegetation structure data 
                                                                      #Os dados estão organizados assim ~~ the data is organized like this:
                                                                      #       VC  WS  BS  AHV ...
                                                                      #G1_01 9.33  0.00  0.66 ...

todassolo = read.table("01072021RDAsolos.txt", h=T)                   #Variáveis de solo ~~ Soil variables
                                                                      #         Clay  pH  SMP
                                                                      #G1_01     7    5.3  5

gruposUPGMA = read.table("01072021RDAgrupos.txt")                     #Grupos obtidos na UPGMA
                                                                      #Os dados estão organizados assim ~~ the data is organized like this:
                                                                      #   V1     V2 
                                                                      #  G1_01   1  
                                                                      #  G1_02   1
                                                                      #  G2_01   2 
grupos  = as.factor(gruposUPGMA[,2])
lifeform = read.table("lifeformIdspUPGMA1.txt",header = T)
                                                                      #Os dados estão organizados assim ~~ the data is organized like this:
                                                                      #         sp              LifeForm                Acron
                                                                      #  Ludwigia_hexapetala    Emerging                LudHex
                                                                      #  Luziola_peruviana      Prostrate_decumbent     LuzPer
todassolo= cbind(todassolo[,c(2,3,4,5,6,7,11,22,23,24,25)])           #seleciona apenas as colunas especificadas  ~~  selects only the specified columns

#Vif.cca (variance inflation factor) - more information (https://easyr.com.br/analises-no-r-colinearidade-parte-1)
vif.cca(rda(FR_especies, todassolo)) 
todassolo2 = cbind(todassolo[,-c(2,3,10,11)]) #remover valores acima de "10" um a um ~~ remove values ​​above "10" one by one
vif.cca(rda(FR_especies, todassolo2))

#ordistep para selecionar variáveis preditoras de solo ~~ ordistep to select soil predictor variables
mod0 <- rda(FR_especies ~ 1, todassolo2 ) #modelo só com intercepto ~~ model with intercept only
mod1 <- rda(FR_especies ~ ., todassolo2 ) #modelo com todas variáveis ~~ model with all variables
selecionadas = ordiR2step(mod0, scope = formula(mod1), direction="both", Pin = 0.2)
selecionadas$anova
solosel = cbind(todassolo2[,c(2,3,4,5)])

#ordistep para selecionar variáveis preditoras de estrutura da vegetação ~~ ordistep to select vegetation structure predictor variables
vif.cca(rda(FR_especies, todasestruturas)) 
todasestruturas2 = cbind(todasestruturas[,-c(1)])
vif.cca(rda(FR_especies, todasestruturas2))

#ordistep para selecionar variavies de solo e estrutura selecionadas ~~ ordistep to select selected soil and structure variables
mod0 <- rda(FR_especies ~ 1, todasestruturas2 ) 
mod1 <- rda(FR_especies ~ ., todasestruturas2 ) 
selecionadas = ordiR2step(mod0, scope = formula(mod1), direction="both", Pin = 0.2)
selecionadas$anova
estrusel = cbind(todasestruturas2[,c(1,2,3,4,5,6)])

soloeestrutura<-as.data.frame(c(estrusel,solosel)) 


#######RDA EM LOGARÍTIMO#######
especieslog<-decostand(FR_especies,method = "log")
#RDA e RDA PARCIAL
rda2<- rda(especieslog,scale(variaveis_selecionadas))
anova.cca(rda2, step=9999)
RsquareAdj(rda2)
plot(rda2)
#### ADD VARIAVEIS, UA E SP  #######
#Usando função Text no gráfico
text(rda2, display="bp", cex=0.6, scaling=2)                                     #Para mostrar variáveis ambientais usar display="bp"
text(rda2, display="sites", cex=0.5,scaling=2)                                   #Para mostrar nome das UA usar display="sites"
text(rda2, display="sp", pch=21, col="red", bg="red", cex=0.5, scaling="sites")  #Para mostrar nome das espécies usar display="sp"

#### ADD VARIAVEIS, UA E SP  #######

#Montando os eixos do gráfico RDA ~~ Assembling the RDA chart axes
#Eixos da LogRDA  ~~ Axes LogRDA
eixos_RDALog<- as.data.frame(scores(rda2, display = 'sites',choices = c(1,2)))
eixos_RDALog <- setNames(as.data.frame(eixos_RDALog), c('LogRDA1','LogRDA2'))
eixos_com_grupos <- cbind(as.data.frame(eixos_RDALog), grupos)

##Eixos de espécies
eixos_RDALogSP<- as.data.frame(scores(rda2, display = 'species',choices = c(1,2)))
eixos_especies <- as.data.frame(scores(eixos_RDALogSP, display = 'species', choices=c(1,2)))
eixos_especies <- setNames (as.data.frame(eixos_especies), c('spRDA1', 'spRDA2'))
eixos_especies$especies <- rownames(eixos_especies)
eixos_especies_sel <- left_join(eixos_especies, lifeform, by = c("especies" = "sp"))
eixos_especies_sel <- eixos_especies_sel %>% filter(!is.na(Acronimo))

##Eixo de variáveis ambientais
eixos_variaveis <- scores(rda2, display = "bp", choices=c(1,2))#Camada de variáveis ambientais
eixos_variaveis <- setNames(as.data.frame(eixos_variaveis), c('vRDA1','vRDA2'))

#Atribuindo vetor de cores
vetor_cores_poly1<-c("#6A5ACD","#6A5ACD","#6A5ACD","#6A5ACD","#6A5ACD",
                     "#6A5ACD","#6A5ACD","#6A5ACD","#6A5ACD","#6A5ACD",
                     "#6A5ACD","#6A5ACD","#6A5ACD","#6A5ACD","#6A5ACD",
                     "#Eb8305","#Eb8305","#Eb8305","#Eb8305","#Eb8305",
                     "#Eb8305","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23",
                     "#6b8E23","#6b8E23","#6b8E23","#6b8E23","#6b8E23")

so_tres_cores <- c("#6A5ACD", "#Eb8305", "#6b8E23")

#Iniciando ggplot
novo <- setDT(eixos_com_grupos)[, .SD[chull(LogRDA1, LogRDA2),], by = 'grupos'] #Se não utilizar esse comando, a ligação entre os pontos não utiliza os pontos da borda do polígono, ai fica bagunçado.
novo$grupos <- factor(novo$grupos)
levels(novo$grupos)
ggplot(data = novo, aes(x = LogRDA1, y = LogRDA2)) + 
  geom_polygon(aes(fill = grupos, color = grupos), alpha = 0.5) +
  #geom_point(data=eixos_com_grupos, color=grupos, size=1)+
  geom_point(data=eixos_com_grupos,aes(colour = grupos), size = 0.5, alpha = 1) +
  scale_fill_manual(values= so_tres_cores)+
  scale_colour_manual(values= so_tres_cores) +
  scale_shape_manual(values=so_tres_cores)+
  geom_text(data = eixos_variaveis, aes(x = (vRDA1)*3.8, y = (vRDA2)*3.8),
            label = rownames(eixos_variaveis),
            size = 3.5) +
  geom_segment(data= eixos_variaveis, aes(x=0,y=0,xend= (vRDA1)*3.6, yend= (vRDA2)*3.6),
               size = 0.5,lwd = 0.3,
               arrow = arrow(length = unit(0.2,"lines")),
               color = "#2E2E2E") +
  geom_text_repel(data = eixos_especies_sel, 
                  aes(x = (spRDA1)*2.6, y = (spRDA2)*2.6),
                  label = eixos_especies_sel$Acronimo,
                  size = 3.0, color = "#090c0e")  +
  #scale_x_continuous(breaks=seq(-2,2,0.5),expand=expansion(mult=.06)) +
  #scale_y_continuous(breaks=seq(-2,2,0.5),expand=expansion(mult=.06)) +
  theme(axis.text = element_text(color = "black", size = 6),
        axis.title = element_text(color = "black", size = 8),
        panel.background = element_blank(),
        panel.border = element_rect(color = "black",fill = NA),
        panel.grid = element_blank()) +
  labs(x = "RDA1", y = "RDA2")
ggsave("RDA.png", width = 230, height = 200, unit = "mm", dpi = 600)

